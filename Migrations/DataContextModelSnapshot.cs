// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_Atenciones_Enfermeria.Data;

#nullable disable

namespace Proyecto_Atenciones_Enfermeria.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.Atencion", b =>
                {
                    b.Property<int>("Id_atencion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_atencion"));

                    b.Property<bool>("Borrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("DerivacionId_derivacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_atencion")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("Hora_atencion")
                        .HasColumnType("time(6)");

                    b.Property<int?>("Id_derivacion")
                        .HasColumnType("int");

                    b.Property<int>("Id_paciente")
                        .HasColumnType("int");

                    b.Property<int>("Id_usuario")
                        .HasColumnType("int");

                    b.Property<int?>("PacienteId_paciente")
                        .HasColumnType("int");

                    b.Property<string>("Tipo_atencion")
                        .HasColumnType("longtext");

                    b.Property<int?>("UsuarioId_usuario")
                        .HasColumnType("int");

                    b.HasKey("Id_atencion");

                    b.HasIndex("DerivacionId_derivacion");

                    b.HasIndex("PacienteId_paciente");

                    b.HasIndex("UsuarioId_usuario");

                    b.ToTable("Atenciones");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.Derivacion", b =>
                {
                    b.Property<int>("Id_derivacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_derivacion"));

                    b.Property<bool>("Borrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Destino")
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo_traslado")
                        .HasColumnType("longtext");

                    b.HasKey("Id_derivacion");

                    b.ToTable("Derivaciones");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.Efector", b =>
                {
                    b.Property<int>("Id_efector")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_efector"));

                    b.Property<bool>("Borrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Localidad")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Programa")
                        .HasColumnType("longtext");

                    b.HasKey("Id_efector");

                    b.ToTable("Efectores");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.Paciente", b =>
                {
                    b.Property<int>("Id_paciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_paciente"));

                    b.Property<string>("Apellido")
                        .HasColumnType("longtext");

                    b.Property<bool>("Borrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DNI")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("Id_paciente");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.Prestacion", b =>
                {
                    b.Property<int>("Id_prestacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_prestacion"));

                    b.Property<bool>("Borrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Id_tipo_prestacion")
                        .HasColumnType("int");

                    b.Property<string>("PrestacionNombre")
                        .HasColumnType("longtext");

                    b.Property<int?>("TipoPrestacionId_tipo_prestacion")
                        .HasColumnType("int");

                    b.HasKey("Id_prestacion");

                    b.HasIndex("TipoPrestacionId_tipo_prestacion");

                    b.ToTable("Prestaciones");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.RegistroAtencion", b =>
                {
                    b.Property<int>("Id_registro_atencion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_registro_atencion"));

                    b.Property<int?>("AtencionId_atencion")
                        .HasColumnType("int");

                    b.Property<bool>("Borrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Id_atencion")
                        .HasColumnType("int");

                    b.Property<int>("Id_prestacion")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.Property<int?>("PrestacionId_prestacion")
                        .HasColumnType("int");

                    b.HasKey("Id_registro_atencion");

                    b.HasIndex("AtencionId_atencion");

                    b.HasIndex("PrestacionId_prestacion");

                    b.ToTable("RegistrosAtencion");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.TipoPrestacion", b =>
                {
                    b.Property<int>("Id_tipo_prestacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_tipo_prestacion"));

                    b.Property<bool>("Borrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Tipo_prestacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id_tipo_prestacion");

                    b.ToTable("TiposPrestacion");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.Usuario", b =>
                {
                    b.Property<int>("Id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_usuario"));

                    b.Property<string>("Apellido")
                        .HasColumnType("longtext");

                    b.Property<bool>("Borrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Correo")
                        .HasColumnType("longtext");

                    b.Property<string>("DNI")
                        .HasColumnType("longtext");

                    b.Property<int?>("EfectorId_efector")
                        .HasColumnType("int");

                    b.Property<string>("Hash_Password")
                        .HasColumnType("longtext");

                    b.Property<int>("Id_efector")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Rol")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("Id_usuario");

                    b.HasIndex("EfectorId_efector");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.Atencion", b =>
                {
                    b.HasOne("Proyecto_Atenciones_Enfermeria.Models.Derivacion", "Derivacion")
                        .WithMany("Atenciones")
                        .HasForeignKey("DerivacionId_derivacion");

                    b.HasOne("Proyecto_Atenciones_Enfermeria.Models.Paciente", "Paciente")
                        .WithMany("Atenciones")
                        .HasForeignKey("PacienteId_paciente");

                    b.HasOne("Proyecto_Atenciones_Enfermeria.Models.Usuario", "Usuario")
                        .WithMany("Atenciones")
                        .HasForeignKey("UsuarioId_usuario");

                    b.Navigation("Derivacion");

                    b.Navigation("Paciente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.Prestacion", b =>
                {
                    b.HasOne("Proyecto_Atenciones_Enfermeria.Models.TipoPrestacion", "TipoPrestacion")
                        .WithMany("Prestaciones")
                        .HasForeignKey("TipoPrestacionId_tipo_prestacion");

                    b.Navigation("TipoPrestacion");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.RegistroAtencion", b =>
                {
                    b.HasOne("Proyecto_Atenciones_Enfermeria.Models.Atencion", "Atencion")
                        .WithMany("RegistrosAtencion")
                        .HasForeignKey("AtencionId_atencion");

                    b.HasOne("Proyecto_Atenciones_Enfermeria.Models.Prestacion", "Prestacion")
                        .WithMany("RegistrosAtencion")
                        .HasForeignKey("PrestacionId_prestacion");

                    b.Navigation("Atencion");

                    b.Navigation("Prestacion");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.Usuario", b =>
                {
                    b.HasOne("Proyecto_Atenciones_Enfermeria.Models.Efector", "Efector")
                        .WithMany("Usuarios")
                        .HasForeignKey("EfectorId_efector");

                    b.Navigation("Efector");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.Atencion", b =>
                {
                    b.Navigation("RegistrosAtencion");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.Derivacion", b =>
                {
                    b.Navigation("Atenciones");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.Efector", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.Paciente", b =>
                {
                    b.Navigation("Atenciones");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.Prestacion", b =>
                {
                    b.Navigation("RegistrosAtencion");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.TipoPrestacion", b =>
                {
                    b.Navigation("Prestaciones");
                });

            modelBuilder.Entity("Proyecto_Atenciones_Enfermeria.Models.Usuario", b =>
                {
                    b.Navigation("Atenciones");
                });
#pragma warning restore 612, 618
        }
    }
}
